version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0

commands:
  install-eksctl:
    steps:
      - run:
          name: Install the eksctl tool
          description: |
            Fixed version of install-eksctl command, which have incorrect eksctl download url
            Original version: https://github.com/CircleCI-Public/aws-eks-orb/blob/master/src/commands/install-eksctl.yml
            Should be fixed in orb circleci/aws-eks@2.0.0
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi

            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download


jobs:
  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster to be created
        type: string
        default: ''
      created-cluster-name:
        description: |
          Actual name, which will be used during cluster creation name
          If cluster already exists, it should be evaulated to empty string to omit cluster cration
        type: env_var_name
        default: CLUSTER_NAME
    steps:
      - install-eksctl
      - run:
          name: Determine created cluster name
          description: |
            Check if cluster exists, and if yes - pass empty cluster name, which will skip cluster creation
          command: |
            CLUSTER_VAR="<< parameters.cluster-name >>"
            echo "check cluster creation"
            echo $CLUSTER_VAR
            CLUSTER_EXISTS=$(eksctl get cluster $CLUSTER_VAR | grep error)
            if [ -z $CLUSTER_EXISTS ]; then
              echo "will skip cluster creation"
              echo "export CLUSTER_NAME=''" >> $BASH_ENV
            else
              echo "will create cluster"
              echo "export CLUSTER_NAME=$CLUSTER_VAR" >> $BASH_ENV
            fi
      - aws-eks/create-cluster:
          cluster-name: << parameters.created-cluster-name >>
          verbose: 4
          tags: "Project=UdacityCapstone"
          node-type: "t2.micro"
          nodes-max: 2
          ssh-access: true
          ssh-public-key: "udacity_aws"
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get services
  delete-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster to be deleted
        type: string
    steps:
      - install-eksctl
      - aws-eks/delete-cluster:
          cluster-name: << parameters.cluster-name >>
          verbose: 4
workflows:
  deployment:
    jobs:
      - create-cluster:
          cluster-name: my-eks-demo
      - test-cluster:
          cluster-name: my-eks-demo
          requires:
            - create-cluster
      #- delete-cluster:
      #    cluster-name: my-eks-demo
      #    requires:
      #     - test-cluster
